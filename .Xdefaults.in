! .Xdefaults.in
!
! Run through subst-geometry before loading to override geometry
! settings for various screen resolutions.

! xterm
xterm*foreground:			ivory
xterm*background:			black
xterm*cursorColor:              	yellow
xterm*pointerColor:             	white
xterm*pointerColorBackground:   	ivory
xterm*jumpScroll:			true
xterm*saveLines:			1000	
xterm*scrollBar:			false
xterm*scrollBar*thickness:		12
xterm*reverseWrap:			true
xterm*font:       			lucidasanstypewriter-bold-12

xterm*color0:				Black
xterm*color1:				Blue
xterm*color2:				Green
xterm*color3:				Yellow
xterm*color4:				RoyalBlue1
xterm*color5:				Red
xterm*color6:				dodger blue
xterm*color7:				White

xterm*VT100.Translations: #override\n\
	<KeyPress>Prior : scroll-back(1,page)\n\
	<KeyPress>Next : scroll-forw(1,page)\n\
	Shift<Btn4Down>,<Btn4Up>:scroll-back(1,line)\n\
	Shift<Btn5Down>,<Btn5Up>:scroll-forw(1,line)\n\
	Ctrl<Btn4Down>,<Btn4Up>:scroll-back(1,page)\n\
	Ctrl<Btn5Down>,<Btn5Up>:scroll-forw(1,page)\n\
	<Btn4Down>,<Btn4Up>:scroll-back(1,halfpage)\n\
	<Btn5Down>,<Btn5Up>:scroll-forw(1,halfpage)\n\
        <KeyPress> Insert: insert-selection(PRIMARY, CUT_BUFFER0) \n\
	Shift<KeyPress>KP_Insert:insert-selection(PRIMARY, CUT_BUFFER0)

! emacs
emacs*font:			lucidasanstypewriter-bold-12
emacs*geometry:			=EMACS_GEOM
emacs*borderWidth:		0
emacs*internalBorder: 		0
emacs*foreground:		ivory
emacs*background:		black
emacs*menu*foreground:		black
emacs*menu*background:		gray87
emacs*menubar*foreground:  	black
emacs*menubar*background:  	grey87
emacs*scrollbar*foreground:	honeydew2
emacs*scrollbar*background:	cadetBlue4
emacs*borderColor:		white
emacs*cursorColor:		yellow
emacs*pointerColor:		red

! dclock
dclock*geometry:                =DCLOCK_GEOM
dclock*foreground:             	black
dclock*background:             	gray87
dclock*led_off:               	gray87
dclock*dateup:			1
dclock*fade:			1
dclock*blink:			0
dclock*date:			%a %b %e %Y

! mailbox
mailbox*geometry:		=MAILBOX_GEOM
mailbox*foreground:		black
mailbox*background:		gray87
mailbox*borderWidth:		0

! XPostit
xpostit.geometry:		=XPOSTIT_GEOM
xpostit*foreground:		black
xpostit*background:		gray87
xpostit.Confirm*foreground:	black
xpostit.Confirm*background:	gray87
xpostit.Confirm*font:		*helvetica-bold-r-normal--12*
xpostit*PostItNote*foreground:	black
xpostit*PostItNote*background:	gray87
xpostit*PostItNote*font:	*helvetica-bold-r-normal--14*
xpostit*saveNotes:		false

! XPostit+
xpostit+.geometry:              =XPOSTIT_GEOM
xpostit+*foreground:            black
xpostit+*background:            gray87
xpostit+.Confirm*foreground:    black
xpostit+.Confirm*background:    gray87
xpostit+.Confirm*font:          *helvetica-bold-r-normal--12*
xpostit+*PostItNote*foreground: black
xpostit+*PostItNote*background: yellow
xpostit+*Postit+Note*font:      *helvetica-bold-r-normal--14*
xpostit+*saveNotes:             true

! Xmms
xmms*geometry:			=-1-1

! Xpdf
xpdf.geometry:			=BASE_GEOM-5-5
xpdf.zoom:			page

!  Motif translations for Emacs keybindings in an XmText widgit
!  from part3 of the Motif FAQ - copied from jal
*XmText.translations: #override\n\
        Ctrl <Key>b:            backward-character()\n\
        Alt <Key>b:             backward-word()\n\
        Meta <Key>b:            backward-word()\n\
        Shift Alt <Key>b:       backward-word(extend)\n\
        Shift Meta <Key>b:      backward-word(extend)\n\
        Alt <Key>[:             backward-paragraph()\n\
        Meta <Key>[:            backward-paragraph()\n\
        Shift Alt <Key>[:       backward-paragraph(extend)\n\
        Shift Meta <Key>[:      backward-paragraph(extend)\n\
        Alt <Key><:             beginning-of-file()\n\
        Meta <Key><:            beginning-of-file()\n\
        Ctrl <Key>a:            beginning-of-line()\n\
        Shift Ctrl <Key>a:      beginning-of-line(extend)\n\
        Ctrl <Key>osfInsert:    copy-clipboard()\n\
        Shift <Key>osfDelete:   cut-clipboard()\n\
        Shift <Key>osfInsert:   paste-clipboard()\n\
        Alt <Key>>:             end-of-file()\n\
        Meta <Key>>:            end-of-file()\n\
        Ctrl <Key>e:            end-of-line()\n\
        Shift Ctrl <Key>e:      end-of-line(extend)\n\
        Ctrl <Key>f:            forward-character()\n\
        Alt <Key>]:             forward-paragraph()\n\
        Meta <Key>]:            forward-paragraph()\n\
        Shift Alt <Key>]:       forward-paragraph(extend)\n\
        Shift Meta <Key>]:      forward-paragraph(extend)\n\
        Ctrl Alt <Key>f:        forward-word()\n\
        Ctrl Meta <Key>f:       forward-word()\n\
        Ctrl <Key>d:            delete-next-character()\n\
        Alt <Key>BackSpace:     delete-previous-word()\n\
        Meta <Key>BackSpace:    delete-previous-word()\n\
        Ctrl <Key>w:            key-select() delete-selection()\n\
        Ctrl <Key>k:            delete-to-end-of-line()\n\
        Alt <Key>Delete:        delete-to-start-of-line()\n\
        Meta <Key>Delete:       delete-to-start-of-line()\n\
        Ctrl <Key>o:            newline-and-backup()\n\
        Ctrl <Key>j:            newline-and-indent()\n\
        Ctrl <Key>n:            next-line()\n\
        Ctrl <Key>osfLeft:      page-left()\n\
        Ctrl <Key>osfRight:     page-right()\n\
        Ctrl <Key>p:            previous-line()\n\
        Ctrl <Key>g:            process-cancel()\n\
        Ctrl <Key>osfDown:      next-page()\n\
        Ctrl <Key>osfUp:        previous-page()\n\
        Ctrl <Key>space:        set-anchor()\n

!  Emacs-like Motif bindings for TextFields
!  swiped from above code; the kill- actions don't seem to work
*XmTextField.translations: #override\n\
        Ctrl <Key>b:            backward-character()\n\
        Alt <Key>b:             backward-word()\n\
        Meta <Key>b:            backward-word()\n\
        Shift Alt <Key>b:       backward-word(extend)\n\
        Shift Meta <Key>b:      backward-word(extend)\n\
        Ctrl <Key>a:            beginning-of-line()\n\
        Shift Ctrl <Key>a:      beginning-of-line(extend)\n\
        Ctrl <Key>osfInsert:    copy-clipboard()\n\
        Shift <Key>osfDelete:   cut-clipboard()\n\
        Shift <Key>osfInsert:   paste-clipboard()\n\
        Ctrl <Key>e:            end-of-line()\n\
        Shift Ctrl <Key>e:      end-of-line(extend)\n\
        Ctrl <Key>f:            forward-character()\n\
        Ctrl Alt <Key>f:        forward-word()\n\
        Ctrl Meta <Key>f:       forward-word()\n\
        Ctrl <Key>d:            delete-next-character()\n\
        Alt <Key>BackSpace:     delete-previous-word()\n\
        Meta <Key>BackSpace:    delete-previous-word()\n\
        Ctrl <Key>w:            key-select() delete-selection()\n\
        Ctrl <Key>k:            delete-to-end-of-line()\n\
        Alt <Key>Delete:        delete-to-start-of-line()\n\
        Meta <Key>Delete:       delete-to-start-of-line()\n\
        Ctrl <Key>g:            process-cancel()\n\
        Ctrl <Key>space:        set-anchor()\n


!## NETSCAPE
Netscape*drawingArea.translations:  #replace    \
        <Btn1Down>:           ArmLink()   \n\
        <Btn2Down>:           ArmLink()   \n\
        ~Shift<Btn1Up>:       ActivateLink()  \n\
        ~Shift<Btn2Up>:       ActivateLink(new-window)  \
                                        DisarmLink()    \n\
        Shift<Btn1Up>:        ActivateLink(save-only)  \
                                        DisarmLink()    \n\
        Shift<Btn2Up>:        ActivateLink(save-only)  \
                                        DisarmLink()    \n\
        <Btn1Motion>:             DisarmLinkIfMoved()  \n\
        <Btn2Motion>:             DisarmLinkIfMoved()  \n\
        <Btn3Motion>:             DisarmLinkIfMoved()  \n\
        <Motion>:             DescribeLink()  \n\
        <Btn3Down>:           xfeDoPopup()    \n\
        <Btn3Up>:             ActivatePopup() \n\
        Ctrl<Btn4Down>: PageUp()\n\
        Ctrl<Btn5Down>: PageDown()\n\
        Shift<Btn4Down>: LineUp()\n\
        Shift<Btn5Down>: LineDown()\n\
         None<Btn4Down>: LineUp()LineUp()LineUp()LineUp()LineUp()LineUp()\n\
         None<Btn5Down>: LineDown()LineDown()LineDown()LineDown()LineDown()LineDown()\n\
        Alt<Btn4Down>: xfeDoCommand(forward)\n\
        Alt<Btn5Down>: xfeDoCommand(back)\n

Netscape*globalNonTextTranslations: #override\n\
 Shift<Btn4Down>: LineUp()\n\
 Shift<Btn5Down>: LineDown()\n\
 None<Btn4Down>:LineUp()LineUp()LineUp()LineUp()LineUp()LineUp()\n\
 None<Btn5Down>:LineDown()LineDown()LineDown()LineDown()LineDown()LineDown()\n\
 Alt<Btn4Down>: xfeDoCommand(forward)\n\
 Alt<Btn5Down>: xfeDoCommand(back)\n

! eliminate some of Netscapes annoying "features"
Netscape*blinkingEnabled:	false
Netscape*useStderrDialog:	false
Netscape*useStdoutDialog:	false

